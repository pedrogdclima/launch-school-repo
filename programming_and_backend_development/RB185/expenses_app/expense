#! /usr/bin/env ruby

require "pg"
require "date"

class ExpenseData
  def initialize
    @connection = PG.connect(dbname: "expense_db")
  end

  def display_result(query_result)
    
  end

  def list_expenses
    result = @connection.exec("SELECT * FROM expenses ORDER BY created_on ASC")
    result.each do |tuple|
      columns = [ tuple["id"].rjust(3),
                  tuple["created_on"].rjust(10),
                  tuple["amount"].rjust(12),
                  tuple["memo"] ]
  
      puts columns.join(" | ")
    end
  end

  def add_expense(argu)
    date = Date.today
    sql = "INSERT INTO expenses(amount, memo, created_on) VALUES ($1, $2, $3)"
    @connection.exec_params(sql, [ARGV[1], ARGV[2], date])
  end
end

class CLI
  def initialize
    @application = ExpenseData.new
  end

  def display_help
    puts <<~HELP
      An expense recording system
  
      Commands:
  
      add AMOUNT MEMO - record a new expense
      clear - delete all expenses
      list - list all expenses
      delete NUMBER - remove expense with id NUMBER
      search QUERY - list expenses with a matching memo field
    HELP
  end

  def run(arguments)
    case
    when arguments[0] == "list"
      @application.list_expenses
    when arguments[0] == "add"
      if arguments.size < 2
        puts "You must provide an amount and a memo."
      else
        @application.add_expense(arguments)
      end
    else
      display_help
    end
  end
end

CLI.new.run(ARGV)
